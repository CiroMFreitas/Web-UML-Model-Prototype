{
    "label": {
        "command_console": "Console de Comandos"
    },
    "command": {
        "create": {
            "class": {
                "success_feedback": {
                    "part1": "A classe ",
                    "part2": " foi criada com sucesso"
                },
                "relationship": {
                    "success_feedback": {
                        "part1": "A relação ",
                        "part2": " entre ",
                        "part3": " e ",
                        "part4": " com nome ",
                        "part5": " foi criada com sucesso"
                    }
                }
            }
        },
        "read": {
            "class": {
                "not_found": {
                    "part1": "A classe ",
                    "part2": " não foi encontrada no projeto"
                },
                "feedback": {
                    "start": "A classe ",
                    "exists": " existe no projeto",
                    "attribute": {
                        "none": "; não possui atributos",
                        "singular": "; possui o atributo",
                        "plural": "; possui os atributos"
                    },
                    "method": {
                        "none": "; não possui métodos",
                        "singular": "; possui o método",
                        "plural": "; possui os métodos"
                    },
                    "parameter": {
                        "none": "; e não possui parâmetros",
                        "singular": "; que possui o parâmetro",
                        "plural": "; que possui os parâmetros",
                        "last": "; que é o último parâmetro"
                    }
                }
            },
            "relationship": {
                "not_found": {
                    "part1": "O relacionamento ",
                    "part2": " não foi encontrado no projeto"
                },
                "feedback": {
                    "start": "O relacionamento ",
                    "named": " com nome ",
                    "reflexive": " da classe ",
                    "between": " entre as classes ",
                    "cardinality": {
                        "no": " sem cardinalidade",
                        "yes": " com cardinalidade ",
                        "no_origin": " sem origem especificada",
                        "to": " para ",
                        "no_destination": " sem destino especificado"
                    }
                }
            }
        },
        "remove": {
            "class": {
                "success_feedback": {
                    "part1": "A classe ",
                    "part2": " foi removida com sucesso"
                },
                "relationship": {
                    "success_feedback": {
                        "part1": "O relacionamento ",
                        "part2": " foi removida com sucesso"
                    }
                }
            }
        },
        "alter": {
            "class": {
                "success_feedback": {
                    "part1": "A classe ",
                    "part2": " foi alterada com sucesso"
                },
                "relationship": {
                    "success_feedback": {
                        "part1": "O relacionamento ",
                        "part2": " foi alterada com sucesso"
                    }
                }
            }
        }
    },
    "error": {
        "command_syntax": "Erro na sintaxe do comando",
        "unrecognised_type": "Entidade não reconhecida",
        "insufficient_arguments": "Não foram fornecidos argumentos suficientes",
        "not_supported_relationship_type": "Tipo de relacionamento fornecido não é suportado",
        "class_not_found": "Classe não foi encontrada no projeto",
        "invalid_cadinality": "Cardinalidade fornecida é invalida",
        "relationship_not_found": "Relacionamento não foi encontrado no projeto",
        "missing_end_pointer": "Pelo menos um argumento não foi fechado apropiadamente"
    }
}